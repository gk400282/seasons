{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","aria-hidden","Spinner","class","message","defaultProps","App","state","errorMessage","renderContent","_this","src_SeasonDisplay_0","src_Spinner","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"4LAGMA,SAAe,CACpBC,OAAO,CACNC,KAAM,sBACNC,SAAU,OAEXC,OAAO,CACNF,KAAM,oBACNC,SAAU,eAwBGE,EAXO,SAAAC,GACpB,IAViBC,EAAKC,EAUhBC,GAVWF,EAUQD,EAAMC,KAVTC,GAUc,IAAIE,MAAOC,YATrC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAGrBA,EAAM,EAAI,SAAW,UAICK,EAEJZ,EAAaS,GAA/BP,EAFsBU,EAEtBV,KAAMC,EAFgBS,EAEhBT,SACb,OAAQU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IACzCI,EAAAC,EAAAC,cAAA,KAAGG,cAAY,OAAOF,UAAS,aAAAC,OAAed,EAAf,mBAC/BU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGG,cAAY,OAAOF,UAAS,cAAAC,OAAgBd,EAAhB,qBC3B5BgB,EAAU,SAAAb,GACf,OACCO,EAAAC,EAAAC,cAAA,OAAKK,MAAM,uCACNP,EAAAC,EAAAC,cAAA,OAAKK,MAAM,WACTP,EAAAC,EAAAC,cAAA,OAAKK,MAAM,kBAAkBd,EAAMe,YAM5CF,EAAQG,aAAe,CACtBD,QAAS,cAGKF,QCXTI,6MAEFC,MAAQ,CAACjB,IAAK,KAAMkB,aAAc,MAOlCC,cAAgB,WACf,OAAIC,EAAKH,MAAMC,cAAgBE,EAAKH,MAAMjB,IAC/BM,EAAAC,EAAAC,cAACa,EAAD,CAAerB,IAAKoB,EAAKH,MAAMjB,MAEpCoB,EAAKH,MAAMC,eAAiBE,EAAKH,MAAMjB,IAC/BM,EAAAC,EAAAC,cAAA,qBAAaY,EAAKH,MAAMC,cAE3BZ,EAAAC,EAAAC,cAACc,EAAD,CAASR,QAAQ,sHAbV,IAAAS,EAAAC,KAClBC,OAAOC,UAAUC,YAAYC,mBACtB,SAAAC,GAAQ,OAAIN,EAAKO,SAAS,CAAE9B,IAAK6B,EAASE,OAAOC,YACjD,SAAAC,GAAG,OAAIV,EAAKO,SAAS,CAAEZ,aAAce,EAAInB,6CAc7C,OAAOU,KAAKL,uBApBFe,IAAMC,WAyBxBC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.9cb24a01.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./SeasonDisplay.css\";\r\n\r\nconst seasonConfig = {\r\n\tsummer:{\r\n\t\ttext: \"Let's hit the beach\",\r\n\t\ticonName: \"sun\"\r\n\t},\r\n\twinter:{\r\n\t\ttext: \"Brrr, it's chilly\",\r\n\t\ticonName: \"snowflake\"\r\n\t}\r\n}\r\n//helper function\r\nconst getSeason = (lat, month) => {\r\n\tif(month > 2 && month < 9){\r\n\t\treturn lat > 0 ? \"summer\" : \"winter\";\r\n\t}\r\n\telse{\r\n\t\treturn lat > 0 ? \"winter\" : \"summer\";\r\n\t}\r\n}\r\n//main function\r\nconst SeasonDisplay = props => {\r\n\t\tconst season = getSeason(props.lat, new Date().getMonth());\r\n\t\tconst {text, iconName} = seasonConfig[season];\r\n\t\treturn (<div className={`season-display ${season}`}>\r\n\t\t\t<i aria-hidden=\"true\" className={`icon-left ${iconName} massive icon`} />\r\n\t\t\t<h1>{text}</h1>\r\n\t\t\t<i aria-hidden=\"true\" className={`icon-right ${iconName} massive icon`} />\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from \"react\";\r\n\r\nconst Spinner = props => {\r\n\treturn(\r\n\t\t<div class='ui active transition visible dimmer'>\r\n\t      <div class='content'>\r\n\t        <div class='ui text loader'>{props.message}</div>\r\n\t      </div>\r\n\t    </div>\r\n\t\t);\r\n};\r\n//setting default props\r\nSpinner.defaultProps = {\r\n\tmessage: \"Loading...\"\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n \t//initializing state - gets connverted to constructor\n    state = {lat: null, errorMessage: \"\"};\n    componentDidMount(){\n    \twindow.navigator.geolocation.getCurrentPosition(\n            position => this.setState({ lat: position.coords.latitude }),\n            err => this.setState({ errorMessage: err.message })\n        );\n    }\n    renderContent = () =>{\n    \tif(!this.state.errorMessage && this.state.lat) {\n        \treturn <SeasonDisplay lat={this.state.lat}/>;\n        }\n        if(this.state.errorMessage && !this.state.lat) {\n            return <div>Error: {this.state.errorMessage}</div>;\n        }\n        \treturn <Spinner message=\"Please allow location Access.\" />;\n    }\n    //we must define render method\n    render() {\n        return this.renderContent();\n    }\n\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}